@model IEnumerable<Library.Models.BookModel>

@{
    ViewData["Title"] = "Lista książek";
}

<main class="container">
    <div class="text-center mb-5">
        <h1 class="display-4">Książki</h1>
        <p>Dodawaj, edytuj oraz usuwaj książki.</p>
        <a type="button" class="btn btn-primary" asp-controller="Book" asp-action="Add">Dodaj książkę</a>
    </div>

    <table class="table table-striped align-middle">
        <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Isbn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Year)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rents)
            </th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model)
        {
            <tr data-model-id="@item.ID">
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Isbn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Year)
                </td>
                <td>
                    <button
                        type="button"
                        class="btn btn-sm btn-outline-secondary"
                        data-bs-toggle="popover"
                        data-bs-trigger="focus"
                        data-bs-placement="top"
                        data-bs-content="@Html.DisplayFor(modelItem => item.Description)"
                    >
                        @Html.DisplayNameFor(model => model.Description)
                    </button>
                </td>
                <td>
                    @{
                        var rentedBook = item.Rents.FirstOrDefault();
                    }
                    @if (rentedBook != null)
                    {
                        <span class="badge bg-danger" data-bs-toggle="tooltip" data-bs-title="Wypożyczone przez @rentedBook.Client.Fullname">Wypożyczone</span>
                    }
                    else
                    {
                        <span class="badge bg-success">Dostępne</span>
                    }
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-link">Szczegóły</a> |
                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-link">Edytuj</a> |
                    <a class="btn btn-link @(item.Rents.Any() ? "disabled" : "")" id="removeButton" href="#">Usuń</a>
                </td>
            </tr>
        }
        @if (!Model.Any())
        {
            <td colspan="7" class="text-center">
                Brak książek
            </td>
        }
        </tbody>
    </table>
</main>
<div class="modal fade" tabindex="-1" id="removeModal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Usuń książkę</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Czy na pewno chcesz usunąć tą książkę.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cofnij</button>
                <a type="button" class="btn btn-danger" id="removeModalButton">Usuń</a>
            </div>
        </div>
    </div>
</div>